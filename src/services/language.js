const language = {
  "en-US": {
    day: "days",
    hour: "hours",
    minute: "minutes",
    second: "seconds",
    cancel: "Cancel",
    confirm: "Confirm",
    pending: "pending",
    copy: "Copy",
    edit: "Edit",
    noMoreData: "// No more data",
    emptyData: "// Empty",
    pullToRefresh: "Pull down to refresh ...",
    loosingToRefresh: "Release to refresh ...",
    refreshing: "Loading ...",
    blockToTime: `<span class="color5">{0}&nbsp;blocks≈</span><span class="color6">{1}</span>`,
    canGetDynIncome: "// Will get Dynamic bonus ",
    investDesc: `// Provide Help with \${0}, you will Get Helped with <span class="color1"> \${1}</span> in 10 days;`,
    isRunning: "// dMMM has been running for:<br>",
    latestBlockNumber: "// Ethereum Latest Blocks:",
    blocks: "blocks",
    marketMakerAddress: "// MarketMaker",
    marketMakerENS: "// ENS for MarketMaker",
    blockToOpenGame: `// Will open in<span class="color5"> {0} blocks ≈ </span><span class="color6"> {1} </span>`,
    currentTermID: `// Current Term: No.<span class="color5">{0}</span>`,
    totalInvestmentUsd: "// Helping Fund in total:",
    allUserCount: `<span class="color1">// Participants in total:</span><pre> </pre><span class="color7">{0} </span>`,
    walletAuth: "Connect to wallet",
    dmmmIs: "// dMMM is the heir of the MMM spirit",
    joinUs: "// Join us, join the biggest Helping Community in the world",
    regNow: "Register Now",
    activeAccount: "Active My Account",
    activeAccountDesc: "// You need to activate the account to start dMMM.",
    activeAccountNeed: "// Activation Fee: ",
    waitBtn: "Waiting to Start",
    waitDesc: "// Welcome to dMMM community",
    waitDescSub: "// Coming Soon!",
    canInvestNow: `<span class="color0">//Term No.</span><span class="color5">{0}</span><span class="color7">&nbsp;is available now</span>`,
    investNowBtn: "Provide Help  Now",
    newbieBtn: "Exclusive time",
    newbieDesc: `<span class="color0">//In the Exclusive time for Newbies, you can participate in term No.{0} immediately</span>`,
    giveBtn: "Queue Up",
    fullTermDesc: `<span class="color0">//The quota of current term No.</span><span class="color7">{0}</span><span class="color0"> is FULL</span>`,
    preOrderDesc: `<span class="color0">//You can queue up for term No.</span><span class="color7">{0}</span><span class="color0"></span>`,
    blockToNewTerm: `<span class="color0">//The term No.{0} is </span><span class="color5">{1}</span><span class="color0"> blocks away ≈</span><span class="color5">{2}</span>`,
    blockToNewbie: `<span class="color0">//The Exclusive time for Newbies is </span><span class="color5">{0}</span><span class="color0">blocks ≈</span><span class="color5">{1}</span>`,
    fullGameBtn: "Queue is Full",
    fullGameDesc: "// All terms queue is full",
    blockToTerm: `<span class="color0">//The term No.{0} is </span><span class="color5">{1}</span><span class="color0"> blocks away ≈</span><span class="color5">{2}</span>`,
    queueBtn: "In the Queue",
    queueDesc: `<span class="color0">//The Term No.</span><span class="color5">{0}</span><span class="color0"> you are participating in is in the queue；</span>`,
    blockToIntoTerm: `<span class="color0">//The game will start in </span><span class="color5">{0}</span><span class="color0"> blocks ≈ </span><span class="color5">{1}</span><span class="color0"></span>`,
    helpBtn: "Waiting for Help",
    helpDesc:
      "// You have provided help to the others and are waiting to be helped",
    blockToOut: `<span class="color0">// After <span class="color5">{0}</span> blocks ≈ <span class="color5">{1}</span>, you can get helped with <span class='color4'>\${2}</span></span>`,
    withdrawBtn: "Get Help",
    withdrawDesc: "//  Get help successfully!",
    withdrawAmt: "//  Get helped with",
    withdrawDyn: "//  with dynamic bonus",
    reRegBtn: "Re-register",
    reRegDesc:
      "//You've been kicked out because you haven't provided help to the others for more than 30 days",
    reRegDescSub: "//Re-register please",
    bankruptcyBtn: "Claim Compensation",
    bankruptcyDesc: "//In bankruptcy",
    awardBtn: "Claim LAST-100 Lucky Bonus",
    awardDesc: "//The last 100 lucky users will split the bonus equally",
    overBtn: "Game is Over",
    overDesc: "//dMMM is over, thank you for your support.",
    overDescSub: "//Check official website for new version",
    investOk: `// Successfully provide help with <span class="color3">\${0}</span>`,
    investStatic: `// Will get helped with +<span class="color4">\${0}</span> in 10 days;`,
    investDyn: `// Will receive dynamic bonus +<span class="color4">\${0}</span>;`,
    withdrawOk: "// Successfully get helped!",
    dialog: {
      activating: "Being activated",
      activationFailed: "Activation failed: ",
      confirmWithdraw: "Confirm to get helped",
      withdrawing: "Getting helped",
      withdrawOk: "Successfully get helped!",
      withdrawFailed: "Failed to get helped:",
      reReging: "Being kicked out",
      reRegOk: "You've been kicked out, re-register please",
      reRegFailed: "Failed to be kicked out:",
      awarding: "Claiming LAST-100 Lucky Bonus",
      awardOk: "Done",
      awardFailed: "Failed:",
      bankruptcing: "Claiming Compensation",
      bankruptcyOk: "Done",
      bankruptcyFailed: "Failed:",
      confirmInvest: "Confirm to provide help?",
      investing: "Providing help",
      investFailed: "Failed to provide help: "
    },
    app: {
      newMsg: "Notification",
      loading: "Loading",
      levelUpgrade: "Congratulations, you have been upgraded to Level {0}!",
      becameNode: "Congratulations, you have become a Node!",
      becameSuperNode: "Congratulations, you have become a Super Node!"
    },
    component: {
      changeAddr: "// Change the binding wallet",
      currentAddr: "Current Wallet：",
      inputAddr: "Please input your new wallet address",
      confirmAddr: "Repeat your new wallet address",
      changeAddrBtn: "Change the binding wallet",
      complateUserInfo: "complete user profile",
      editUserInfo: "edit user profile",
      sureToComfirmEdit: "Confirm？",
      addrCanNotEmpty: "Can NOT be empty!",
      addrNotEqual: "The two addresses are inconsistent",
      changeAddrTitle: "change wallet",
      changeAddrOk: "Done",
      changeAddrFailed: "Failed:",
      gearInfo: `<span>Provide \${0}<br>Will get \${1}</span>`,
      improveInfoTitle: "// User infomation",
      inviteCode: "Code: ",
      inputNickname: "Nickname",
      submitInfo: "Submit",
      pleaseComplateUserInfo: "complete user infomation",
      inviteCodeCanNotEmpty: "Invitation code can not be empty",
      pleaseInputNickname: "input your nickname",
      submitFailed: "Failed",
      bindAddrTitle: "bind referees",
      bindAddrOk: "Done",
      bindAddrFailed: "Failed",
      progressGetSign: "· Get signature",
      progressWriteChain: "· Get transcation hash",
      progressPack: "· Waiting for miners to execute",
      progressVerify: "· Verify execution",
      progressWaiting: "Please wait patiently..."
    },
    err: {
      A0: "Operation has been cancelled by user",
      A1: "Incorrect amount",
      A2: "Permission denied",
      A3: "Illegal operation",
      A4: "You're NOT the LAST-100 lucky one",
      A5: "Should be greater than 0",
      A6: "Illegal operation",
      A7: "The game has started",
      A8: "The game isn't broke yet",
      A9: "User registered",
      B1: "User NOT exsits",
      B2: "The game is over",
      B3: "Repeat claim is not allowed within 24 hours",
      B4: "Nothing to claim",
      B5: "Not yet a Node/Super Node",
      B6: "The game hasn't started yet",
      B7: "非註冊合約",
      B8: "The Origin Node is full",
      B9: "Unsupported token",
      C1: "User is not kicked out",
      C2: "Unknown Fund",
      C3: "User has not been actived",
      C4: "Wrong gear",
      C5: "User is still waiting for help",
      C6: "User has been actived",
      C7: "Game is not over",
      C8: "User did not provided help yet",
      C9: "User has been kicked out",
      D1: "The queue is full already",
      D2: "Insufficient helping fund ",
      Unknown: "Execution failed, please try again later. ({0})"
    },
    invite: {
      allLayerEffectiveUser: "// Valid users within all 7 generations",
      firstLayer: "1st",
      secondLayer: "2nd",
      thirdLayer: "3rd",
      fourthLayer: "4th",
      fifthLayer: "5th",
      sixthLayer: "6th",
      seventhLayer: "7th",
      humanNum: "{0}",
      allLv5: `// Lv5 users within all 7 generations: <span class="color3">{0}</span> users (in total) and <span class="color3">{1}</span> users (in different line)`,
      allNode: `// Node users within all 7 generations: <span class="color3">{0}</span> node users (in total) and <span class="color3">{1}</span> node users (in different line)`,
      allPerformance: `// Team performance: <span class="color3">\${0}</span>`,
      myInviteLink: "// My invitation link: ",
      termPerformanceList: "// Team action log",
      linkAlreadyCopied: "Copied",
      addressAlreadyCopied: "Copied",
      myInvite: "My invitation",
      inviteLink: "Invitation link",
      myInviteList: "My invitation log",
      provideHelp: `>><span class="color7">{0}</span>Provide Help <span class="color3">\${1}</span>`
    },
    asset: {
      walletAddr: "// Wallet address",
      change: "Change",
      billingList: "// My financial records recently",
      fee: "fee",
      dynIncome: "Dynamic bonus +",
      active: "Activation bonus +",
      bringOut: "Claim dynamic bonus +",
      withdrawNode: "Claim Node income +",
      withdrawSuperNode: "Claim Super Node income +",
      invest: "Provide help -",
      withdraw: "Get helped +",
      bankruptcy: "Claim Compensation +"
    },
    data: {
      exContract: "// Exchange Contract",
      matchPool: "// Helping Fund",
      securityPool: "// Reserve Fund",
      sourcePool: "// Security Fund",
      awardPool: "// LAST-100 Lucky bonus",
      nodePool: "// Node bonus in current term",
      nodeNum: " {0} Node users",
      superNodePool: "// Super Node bonus in current term",
      superNodeNum: "{0} Super Node users"
    },
    me: {
      activeToShow: "// Will open after activation...",
      myLevel: "// My level:",
      node: "Node",
      superNode: "Super Node",
      totalIncome: "// My total revenue:",
      dynBalance: "// Dynamic:",
      nodeIncomeHistory: "// My Node income:",
      available: "Waiting to claim",
      superNodeIncomeHistory: "// My Super Node income:",
      tokenBalance: "// My token banlance:",
      totalRecord: "All records",
      myInvite: "// My invitation",
      totalInviteRecord: "All invitations",
      noNodeIncome: "Balance of Node income: 0",
      confirmWithdrawNodeIncome: "Confirm to claim Node income?",
      noSuperNodeIncome: "Balance of Super Node income: 0",
      confirmWithdrawSuperNodeIncome: "Confirm to claim Super Node income?"
    }
  }
};

export default language;
